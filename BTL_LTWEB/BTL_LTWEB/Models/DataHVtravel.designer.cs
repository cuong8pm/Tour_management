#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BTL_LTWEB.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HVTRAVEL")]
	public partial class DataHVtravelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    partial void InsertPLACE(PLACE instance);
    partial void UpdatePLACE(PLACE instance);
    partial void DeletePLACE(PLACE instance);
    partial void InsertTOUR(TOUR instance);
    partial void UpdateTOUR(TOUR instance);
    partial void DeleteTOUR(TOUR instance);
    partial void InsertTour_Place(Tour_Place instance);
    partial void UpdateTour_Place(Tour_Place instance);
    partial void DeleteTour_Place(Tour_Place instance);
    partial void InsertIMAGE(IMAGE instance);
    partial void UpdateIMAGE(IMAGE instance);
    partial void DeleteIMAGE(IMAGE instance);
    partial void InsertRegistration(Registration instance);
    partial void UpdateRegistration(Registration instance);
    partial void DeleteRegistration(Registration instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public DataHVtravelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HVTRAVELConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataHVtravelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataHVtravelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataHVtravelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataHVtravelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<PLACE> PLACEs
		{
			get
			{
				return this.GetTable<PLACE>();
			}
		}
		
		public System.Data.Linq.Table<TOUR> TOURs
		{
			get
			{
				return this.GetTable<TOUR>();
			}
		}
		
		public System.Data.Linq.Table<Tour_Place> Tour_Places
		{
			get
			{
				return this.GetTable<Tour_Place>();
			}
		}
		
		public System.Data.Linq.Table<IMAGE> IMAGEs
		{
			get
			{
				return this.GetTable<IMAGE>();
			}
		}
		
		public System.Data.Linq.Table<Registration> Registrations
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNTS")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<bool> _active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public ACCOUNT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PLACES")]
	public partial class PLACE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private EntitySet<Tour_Place> _Tour_Places;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public PLACE()
		{
			this._Tour_Places = new EntitySet<Tour_Place>(new Action<Tour_Place>(this.attach_Tour_Places), new Action<Tour_Place>(this.detach_Tour_Places));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLACE_Tour_Place", Storage="_Tour_Places", ThisKey="ID", OtherKey="ID_Place")]
		public EntitySet<Tour_Place> Tour_Places
		{
			get
			{
				return this._Tour_Places;
			}
			set
			{
				this._Tour_Places.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tour_Places(Tour_Place entity)
		{
			this.SendPropertyChanging();
			entity.PLACE = this;
		}
		
		private void detach_Tour_Places(Tour_Place entity)
		{
			this.SendPropertyChanging();
			entity.PLACE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TOURS")]
	public partial class TOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IMG_main;
		
		private string _Title;
		
		private System.Nullable<decimal> _price;
		
		private string _Journeys;
		
		private string _Times;
		
		private string _Departure;
		
		private string _Destination;
		
		private string _Contact;
		
		private string _Contents;
		
		private string _Contents_Details;
		
		private System.Nullable<System.DateTime> _Start_Day;
		
		private System.Nullable<int> _Discount;
		
		private EntitySet<Tour_Place> _Tour_Places;
		
		private EntitySet<IMAGE> _IMAGEs;
		
		private EntitySet<Registration> _Registrations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIMG_mainChanging(string value);
    partial void OnIMG_mainChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnJourneysChanging(string value);
    partial void OnJourneysChanged();
    partial void OnTimesChanging(string value);
    partial void OnTimesChanged();
    partial void OnDepartureChanging(string value);
    partial void OnDepartureChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnContents_DetailsChanging(string value);
    partial void OnContents_DetailsChanged();
    partial void OnStart_DayChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_DayChanged();
    partial void OnDiscountChanging(System.Nullable<int> value);
    partial void OnDiscountChanged();
    #endregion
		
		public TOUR()
		{
			this._Tour_Places = new EntitySet<Tour_Place>(new Action<Tour_Place>(this.attach_Tour_Places), new Action<Tour_Place>(this.detach_Tour_Places));
			this._IMAGEs = new EntitySet<IMAGE>(new Action<IMAGE>(this.attach_IMAGEs), new Action<IMAGE>(this.detach_IMAGEs));
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG_main", DbType="NVarChar(50)")]
		public string IMG_main
		{
			get
			{
				return this._IMG_main;
			}
			set
			{
				if ((this._IMG_main != value))
				{
					this.OnIMG_mainChanging(value);
					this.SendPropertyChanging();
					this._IMG_main = value;
					this.SendPropertyChanged("IMG_main");
					this.OnIMG_mainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Journeys", DbType="NVarChar(100)")]
		public string Journeys
		{
			get
			{
				return this._Journeys;
			}
			set
			{
				if ((this._Journeys != value))
				{
					this.OnJourneysChanging(value);
					this.SendPropertyChanging();
					this._Journeys = value;
					this.SendPropertyChanged("Journeys");
					this.OnJourneysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Times", DbType="NVarChar(50)")]
		public string Times
		{
			get
			{
				return this._Times;
			}
			set
			{
				if ((this._Times != value))
				{
					this.OnTimesChanging(value);
					this.SendPropertyChanging();
					this._Times = value;
					this.SendPropertyChanged("Times");
					this.OnTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure", DbType="NVarChar(50)")]
		public string Departure
		{
			get
			{
				return this._Departure;
			}
			set
			{
				if ((this._Departure != value))
				{
					this.OnDepartureChanging(value);
					this.SendPropertyChanging();
					this._Departure = value;
					this.SendPropertyChanged("Departure");
					this.OnDepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(50)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(100)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(100)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents_Details", DbType="NVarChar(100)")]
		public string Contents_Details
		{
			get
			{
				return this._Contents_Details;
			}
			set
			{
				if ((this._Contents_Details != value))
				{
					this.OnContents_DetailsChanging(value);
					this.SendPropertyChanging();
					this._Contents_Details = value;
					this.SendPropertyChanged("Contents_Details");
					this.OnContents_DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_Day", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start_Day
		{
			get
			{
				return this._Start_Day;
			}
			set
			{
				if ((this._Start_Day != value))
				{
					this.OnStart_DayChanging(value);
					this.SendPropertyChanging();
					this._Start_Day = value;
					this.SendPropertyChanged("Start_Day");
					this.OnStart_DayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int")]
		public System.Nullable<int> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_Tour_Place", Storage="_Tour_Places", ThisKey="ID", OtherKey="ID_tour")]
		public EntitySet<Tour_Place> Tour_Places
		{
			get
			{
				return this._Tour_Places;
			}
			set
			{
				this._Tour_Places.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_IMAGE", Storage="_IMAGEs", ThisKey="ID", OtherKey="TourID")]
		public EntitySet<IMAGE> IMAGEs
		{
			get
			{
				return this._IMAGEs;
			}
			set
			{
				this._IMAGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_Registration", Storage="_Registrations", ThisKey="ID", OtherKey="ID_Tour")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tour_Places(Tour_Place entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_Tour_Places(Tour_Place entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
		
		private void attach_IMAGEs(IMAGE entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_IMAGEs(IMAGE entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour_Place")]
	public partial class Tour_Place : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_tour;
		
		private System.Nullable<int> _ID_Place;
		
		private EntityRef<PLACE> _PLACE;
		
		private EntityRef<TOUR> _TOUR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_tourChanging(System.Nullable<int> value);
    partial void OnID_tourChanged();
    partial void OnID_PlaceChanging(System.Nullable<int> value);
    partial void OnID_PlaceChanged();
    #endregion
		
		public Tour_Place()
		{
			this._PLACE = default(EntityRef<PLACE>);
			this._TOUR = default(EntityRef<TOUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_tour", DbType="Int")]
		public System.Nullable<int> ID_tour
		{
			get
			{
				return this._ID_tour;
			}
			set
			{
				if ((this._ID_tour != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_tourChanging(value);
					this.SendPropertyChanging();
					this._ID_tour = value;
					this.SendPropertyChanged("ID_tour");
					this.OnID_tourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Place", DbType="Int")]
		public System.Nullable<int> ID_Place
		{
			get
			{
				return this._ID_Place;
			}
			set
			{
				if ((this._ID_Place != value))
				{
					if (this._PLACE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PlaceChanging(value);
					this.SendPropertyChanging();
					this._ID_Place = value;
					this.SendPropertyChanged("ID_Place");
					this.OnID_PlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLACE_Tour_Place", Storage="_PLACE", ThisKey="ID_Place", OtherKey="ID", IsForeignKey=true)]
		public PLACE PLACE
		{
			get
			{
				return this._PLACE.Entity;
			}
			set
			{
				PLACE previousValue = this._PLACE.Entity;
				if (((previousValue != value) 
							|| (this._PLACE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PLACE.Entity = null;
						previousValue.Tour_Places.Remove(this);
					}
					this._PLACE.Entity = value;
					if ((value != null))
					{
						value.Tour_Places.Add(this);
						this._ID_Place = value.ID;
					}
					else
					{
						this._ID_Place = default(Nullable<int>);
					}
					this.SendPropertyChanged("PLACE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_Tour_Place", Storage="_TOUR", ThisKey="ID_tour", OtherKey="ID", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.Tour_Places.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.Tour_Places.Add(this);
						this._ID_tour = value.ID;
					}
					else
					{
						this._ID_tour = default(Nullable<int>);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IMAGES")]
	public partial class IMAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TourID;
		
		private string _link;
		
		private EntityRef<TOUR> _TOUR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTourIDChanging(System.Nullable<int> value);
    partial void OnTourIDChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    #endregion
		
		public IMAGE()
		{
			this._TOUR = default(EntityRef<TOUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourID", DbType="Int")]
		public System.Nullable<int> TourID
		{
			get
			{
				return this._TourID;
			}
			set
			{
				if ((this._TourID != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTourIDChanging(value);
					this.SendPropertyChanging();
					this._TourID = value;
					this.SendPropertyChanged("TourID");
					this.OnTourIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(100)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_IMAGE", Storage="_TOUR", ThisKey="TourID", OtherKey="ID", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.IMAGEs.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.IMAGEs.Add(this);
						this._TourID = value.ID;
					}
					else
					{
						this._TourID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
	public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_Tour;
		
		private System.Nullable<int> _ID_User;
		
		private string _Contents;
		
		private EntityRef<TOUR> _TOUR;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_TourChanging(System.Nullable<int> value);
    partial void OnID_TourChanged();
    partial void OnID_UserChanging(System.Nullable<int> value);
    partial void OnID_UserChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    #endregion
		
		public Registration()
		{
			this._TOUR = default(EntityRef<TOUR>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Tour", DbType="Int")]
		public System.Nullable<int> ID_Tour
		{
			get
			{
				return this._ID_Tour;
			}
			set
			{
				if ((this._ID_Tour != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TourChanging(value);
					this.SendPropertyChanging();
					this._ID_Tour = value;
					this.SendPropertyChanged("ID_Tour");
					this.OnID_TourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_User", DbType="Int")]
		public System.Nullable<int> ID_User
		{
			get
			{
				return this._ID_User;
			}
			set
			{
				if ((this._ID_User != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UserChanging(value);
					this.SendPropertyChanging();
					this._ID_User = value;
					this.SendPropertyChanged("ID_User");
					this.OnID_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(100)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_Registration", Storage="_TOUR", ThisKey="ID_Tour", OtherKey="ID", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._ID_Tour = value.ID;
					}
					else
					{
						this._ID_Tour = default(Nullable<int>);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_Registration", Storage="_user", ThisKey="ID_User", OtherKey="ID", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._ID_User = value.ID;
					}
					else
					{
						this._ID_User = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FullName;
		
		private string _Phone;
		
		private EntitySet<Registration> _Registrations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public user()
		{
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_Registration", Storage="_Registrations", ThisKey="ID", OtherKey="ID_User")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
}
#pragma warning restore 1591
